jobs:

- job: ${{ parameters.name }}
  pool: ${{ parameters.pool }}
  strategy:
    matrix:
      # build_linux.sh has python 3.6 hardcoded
      # Python35:
      #  python.version: '3.5'
      Python36:
        python.version: '3.6'
    maxParallel: 4

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - script: python -m pip install --upgrade pip && pip install pytest papermill
    displayName: 'Install dependencies'

  - task: CondaEnvironment@1
    inputs:
      environmentName: xDeep-FM
      packageSpecs: 'python=3'

  - script: |
      cd examples/notebooks
      pytest utilities-test.py --doctest-modules --junitxml=junit/test-results.xml
    displayName: 'pytest'      

  - script: bash jobs/build_darwin.sh
    condition: eq(variables['Agent.OS'], 'Darwin')
    displayName: 'Install miniconda - MacOS'

  - script: bash jobs/build_linux.sh 
    condition: eq(variables['Agent.OS'], 'Linux')
    displayName: 'Install miniconda - Linux'

  - script: |
      rem powershell -Command "Invoke-WebRequest -Uri https://repo.continuum.io/miniconda/Miniconda3-latest-Windows-x86_64.exe -OutFile Miniconda3-latest-Windows-x86_64.exe"
      rem start /wait "" Miniconda3-latest-Windows-x86_64.exe /InstallationType=JustMe /RegisterPython=0 /S /D=%UserProfile%\Miniconda3       
      cd examples/notebooks/xDeepFM
      conda create -n xDeepFM-criteo python=3.6
      rem %UserProfile%\Miniconda3\Scripts\conda create -n xDeepFM-criteo python=3.6
      rem -f environment.yml
      rem conda activate xDeepFM-criteo
      %UserProfile%\Miniconda3\Scripts\conda env update -f environment.yml
    condition: eq(variables['Agent.OS'], 'Windows_NT')
    displayName: 'Install miniconda - Windows'

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()
