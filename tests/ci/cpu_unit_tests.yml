# unit_tests_staging.yml
# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
#
# use variable group name
variables:
- group: AzureKeyVaultSecrets
- name : 'test_folder'
  value : 'tests/unit'
- name : 'test_env'
  value : 'not notebooks and not spark and not gpu'
- name : 'test_tag'
  value : 'unit tests'

#trigger:
#- azure-pipelines-bz
#  - master

pr:
- staging
- master 

pool:
 vmImage: 'ubuntu-16.04'

steps:

- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.6'
    architecture: 'x64'
  displayName: 'Use Python 3.6'

- script: | 
   az login --service-principal -u $(ClientID) -p $(ClientSecret) --tenant $(TenantID)
   
  displayName: 'Login to Azure'

- script: |
   sed -i 's#"subscription_id": "<>"#"subscription_id": "$(SubscriptionID)"#g' ./tests/ci/config.json
   echo my subscription is $(SubscriptionID)
   cat ./tests/ci/config.json
  displayName: 'replace subscription value'

- script: 
   sed -i 's#"tests/unit_or_smoke_int"#"tests/unit"#g' ./tests/ci/runpytest.py
  displayName: 'replace unit or smoke or int'

- script:
    sed -i 's#"not notebooks and not spark and not gpu"#"not notebooks and not spark and not gpu"#g' ./tests/ci/runpytest.py
  displayName: 'notebooks and spark and gpu'

- bash: |
    echo "##vso[task.prependpath]/data/anaconda/bin"
  displayName: Add Conda to PATH

- script: 'pip install azureml-sdk'
  displayName: 'install azureml-sdk'
  continueOnError: true
  
- script: 
     python scripts/generate_conda_file.py --name reco
  displayName: ' generate_conda_file.py'

- script: |    
     chmod +x scripts/*.py
     ls -al scripts
     chmod +x tests/ci/*.py
     ls -al tests/ci
     pwd
     ls -al
  displayName: 'ls'

- script: |
     python --version
     pip install azure-cli==2.0.46
     pip install --upgrade azureml-sdk[cli]
#     pip install -r tests/ci/requirements.txt
  displayName: 'install cli'

- script: 
      python tests/ci/submit_azureml_pytest.py
  displayName: 'standalone pytest'

- task: PublishTestResults@2
  displayName: 'Publish Test Results **/test-*.xml'
  inputs:
    testResultsFiles: '**/test-*.xml'
    failTaskOnFailedTests: true
  condition: succeededOrFailed()
